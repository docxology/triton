name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        python-version: ["3.8", "3.9", "3.10", "3.11"]

    steps:
    - uses: actions/checkout@v4

    - name: Install uv
      uses: astral-sh/setup-uv@v1
      with:
        version: "latest"

    - name: Set up Python ${{ matrix.python-version }}
      run: uv python install ${{ matrix.python-version }}

    - name: Install dependencies
      run: uv sync --dev

    - name: Install Triton (optional)
      run: uv add triton
      continue-on-error: true

    - name: Run tests
      run: uv run pytest tests/ --tb=short

    - name: Run tests with coverage
      run: uv run pytest --cov=src --cov-report=xml tests/

    - name: Type checking
      run: uv run mypy src/

    - name: Lint code
      run: |
        uv run black --check .
        uv run isort --check .
        uv run flake8 .

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false

  examples:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Install uv
      uses: astral-sh/setup-uv@v1
      with:
        version: "latest"

    - name: Install dependencies
      run: uv sync --dev

    - name: Install Triton
      run: uv add triton

    - name: Run examples
      run: uv run python run_all_examples.py

  validate:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Install uv
      uses: astral-sh/setup-uv@v1
      with:
        version: "latest"

    - name: Install dependencies
      run: uv sync --dev

    - name: Install Triton
      run: uv add triton

    - name: Run validation
      run: uv run python validate_triton_usage.py
